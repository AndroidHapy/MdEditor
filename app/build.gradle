import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
// lambda
// apply plugin: 'me.tatarka.retrolambda'


android {
    compileSdkVersion 29

    defaultConfig {
        applicationId project.PACKAGE_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        minSdkVersion 16
        targetSdkVersion 29
        multiDexEnabled true
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        //必须要保证所有的flavor 都属于同一个维度
        flavorDimensions "default"

        versionName getVersionCodePrefix() // 自动版本名
        versionCode increasedVersionCode() // 自动版本号

    }
    buildTypes {
//        release {
//            //Zipalign优化
//            zipAlignEnabled true
//            // 移除无用的resource文件
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }

        dev {
            applicationIdSuffix ".dev"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {

        flavors_release {

            manifestPlaceholders = [str: "releaseStr", package_name: project.PACKAGE_NAME]
            // 这里的参数是为了在 java 代码中使用，具体的使用方式为：context.getResources().getString(R.string.strKey);
            resValue("string", "serverurl", "formal")
        }
        flavors_dev {
            manifestPlaceholders = [str: "devStr", package_name: project.PACKAGE_NAME]

            resValue("string", "serverurl", "test")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'


    implementation 'com.github.bumptech.glide:glide:3.7.0'

    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation 'io.reactivex:rxjava:1.1.0'


    implementation 'com.jakewharton:butterknife:7.0.1'

    //崩溃异常提示
    debugImplementation 'me.drakeet.library:crashwoodpecker:0.9.7'
    releaseImplementation 'me.drakeet.library:crashwoodpecker-do-nothing:0.9.7'


    //Debug提供内存监测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    implementation 'com.daimajia.numberprogressbar:library:1.2@aar'
    implementation 'com.kaopiz:kprogresshud:1.0.5'

    implementation 'com.github.michael-rapp:android-bottom-sheet:1.3.0'
    implementation 'ren.qinc.edit:lib:0.0.4'

    implementation 'com.blxt.Qandroid:quicklog:1.2.0'

    implementation project(path: ':base')
    implementation project(path: ':editormd')


    implementation 'com.blxt.qJava:qtools:1.0.0'
    implementation 'com.blxt.Qandroid:quickfile4a:1.1.1'

}
repositories {
    mavenCentral()
}

// versionCode按时间自增
def increasedVersionCode(){
    return (int)(System.currentTimeMillis()/1000/60/60/24-17141)
}

//Version Code的前缀。年月日，例如20181203。
def getVersionCodePrefix() {
    def date = new Date()
    def versionCode = date.format('HHmm')
    return versionCode
}
